#!upstart

# This file was generated by Ansible for {{ansible_fqdn}}
# Do NOT modify this file by hand!

{% set app = item -%}
{% set run_dir = item.run_dir|default("/home/django/%s/run" % item.name) -%}
{% set log_dir = item.log_dir|default("/home/django/%s/log" % item.name) -%}
{% set etc_dir = item.etc_dir|default("/home/django/%s/etc" % item.name) -%}
{% set env_dir = item.virtualenv|default("/home/django/%s/env" % item.name) -%}
{% set app_dir = item.app_dir|default("/home/django/%s/src" % item.name) -%}

description "Start Gunicorn server for {{app.name}}"

start on (filesystem)
stop on runlevel [016]

{% for key in app.env|default({}) %}
env {{key}}={{app.env[key]}}
{% endfor %}

# expect fork
respawn

setuid {{wsgi_user}}
setgid {{wsgi_group}}

limit nofile 65536 65536
console log
chdir {{app_dir}}

exec {{env_dir}}/bin/{{app.gunicorn_command|default(wsgi_gunicorn_command)}} \
    {{app.module|default('wsgi:app')}} {{app.gunicorn_addopts|default('')}} \
    --bind={{app.socket|default('unix:' + run_dir + '/' + app.name)}} \
    --log-file={{log_dir}}/{{app.name}}-wsgi.log \
    --name={{app.name}} \
    --pid={{run_dir}}/{{app.name}}.pid \
    --worker-class={{app.gunicorn_worker|default(wsgi_gunicorn_worker)}} \
    --workers={{app.gunicorn_workers|default(wsgi_gunicorn_workers)}} \
    {% if wsgi_reload %}--reload {% endif %}
