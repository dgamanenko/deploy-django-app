---
- name: setup py configuration file
  copy: 
    content: "{{ item.cfg.content|default(item.cfg) }}"
    dest: "{{ item.cfg.path|default('/home/django/%s/etc/config.py' % item.name) }}"
  when: item.cfg|default(None)
  with_items: "{{ wsgi_applications }}" 
  notify: wsgi restart 

- name: setup uwsgi applications
  template: 
    src: uwsgi.ini.j2
    dest: "{{ item.etc_dir|default('/home/django/%s/etc' % item.name) }}/{{ item.name }}-uwsgi.ini"
    owner: "{{ wsgi_user }}"
    group: "{{ wsgi_group }}"
  when: item.server|default(wsgi_server) == 'uwsgi'
  with_items: "{{ wsgi_applications }}" 
  notify: wsgi restart 

- name: setup systemd
  template: 
    src: "systemd-{{ item.server|default(wsgi_server) }}.j2"
    dest: "/etc/systemd/system/{{ item.name }}-wsgi.service"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ wsgi_applications }}" 
  when: wsgi_service == 'systemd'
  notify: wsgi restart 
  become_method: sudo
  become: yes
  become_user: root

- name: setup upstart
  template:
    src: "upstart-{{ item.server|default(wsgi_server) }}.conf.j2"
    dest: "/etc/init/{{ item.name }}-wsgi.conf"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ wsgi_applications }}" 
  when: wsgi_service == 'upstart'
  notify: wsgi restart 
  become_method: sudo
  become: yes
  become_user: root

- name: setup init
  template:
    src: "init-{{ item.server|default(wsgi_server) }}.j2"
    dest: "/etc/init.d/{{ item.name }}-wsgi"
    owner: root
    group: root
    mode: 0755
  with_items: "{{wsgi_applications}}" 
  when: wsgi_service == 'init'
  notify: wsgi restart 
  become_method: sudo
  become: yes
  become_user: root

- name: Ensure that the services are started
  service:
    name: "{{ item.name }}-wsgi"
    state: started
    enabled: yes
  ignore_errors: yes
  with_items: "{{ wsgi_applications }}"
  become_method: sudo
  become: yes
  become_user: root

